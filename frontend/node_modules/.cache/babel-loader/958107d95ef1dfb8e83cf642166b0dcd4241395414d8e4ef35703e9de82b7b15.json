{"ast":null,"code":"var _jsxFileName = \"/root/ai-service/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport TenderList from './components/TenderList';\nimport { searchTenders } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('Тестовый поиск');\n  const [tenders, setTenders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (searchTerm) {\n      fetchTenders(searchTerm);\n    }\n  }, [searchTerm]);\n  const fetchTenders = async query => {\n    setLoading(true);\n    try {\n      const data = await searchTenders(query);\n      setTenders(data);\n    } catch (error) {\n      console.error('Failed to fetch tenders:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n    fetchTenders(term);\n  };\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    setTenders([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearch: handleSearch,\n      onClearSearch: handleClearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TenderList, {\n      tenders: tenders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PUkuU9LkDkL2WQTB6Kzm74GbnpQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","TenderList","searchTenders","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","tenders","setTenders","loading","setLoading","fetchTenders","query","data","error","console","handleSearch","term","handleClearSearch","className","children","onSearch","onClearSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/ai-service/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport TenderList from './components/TenderList';\nimport { searchTenders } from './services/api';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('Тестовый поиск');\n  const [tenders, setTenders] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (searchTerm) {\n      fetchTenders(searchTerm);\n    }\n  }, [searchTerm]);\n\n  const fetchTenders = async (query) => {\n    setLoading(true);\n    try {\n      const data = await searchTenders(query);\n      setTenders(data);\n    } catch (error) {\n      console.error('Failed to fetch tenders:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (term) => {\n    setSearchTerm(term);\n    fetchTenders(term);\n  };\n\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    setTenders([]);\n  };\n\n  return (\n    <div className=\"app\">\n      <SearchBar \n        searchTerm={searchTerm}\n        onSearch={handleSearch}\n        onClearSearch={handleClearSearch}\n      />\n      {loading ? (\n        <div className=\"loading\">Загрузка...</div>\n      ) : (\n        <TenderList tenders={tenders} />\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,gBAAgB,CAAC;EAC9D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU,EAAE;MACdM,YAAY,CAACN,UAAU,CAAC;IAC1B;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMb,aAAa,CAACY,KAAK,CAAC;MACvCJ,UAAU,CAACK,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMM,YAAY,GAAIC,IAAI,IAAK;IAC7BX,aAAa,CAACW,IAAI,CAAC;IACnBN,YAAY,CAACM,IAAI,CAAC;EACpB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,aAAa,CAAC,EAAE,CAAC;IACjBE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACJ,SAAS;MACRO,UAAU,EAAEA,UAAW;MACvBgB,QAAQ,EAAEL,YAAa;MACvBM,aAAa,EAAEJ;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACDjB,OAAO,gBACNP,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE1CxB,OAAA,CAACH,UAAU;MAACQ,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA/CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}